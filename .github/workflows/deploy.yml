name: Build and Deploy

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        docker build -t customer-backend .
        
    - name: Test Docker image
      run: |
        docker run --rm customer-backend node --version
        docker run --rm customer-backend pnpm --version
        
    - name: Copy all files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: 148.230.116.195
        username: root
        key: |
          -----BEGIN OPENSSH PRIVATE KEY-----
          b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCE5Y18X2
          UNRZ+tA/PCfyE/AAAAGAAAAAEAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIBslgWt/ggXzi5H6
          wE0bVWW7IljYyj7g2PHokA0sMPneAAAAoOMthg25i6itHp2e/zIvbGr393bkVVZwxIFPlg
          Utj3UIoyGBS5MCa4phC6edXMfKZfolhWRaqu04uH9fFDz00c9VKo4DintAg+v6TonaotQD
          Tckg/WhpsR2wfx/NzWFLozJCK63UhmXwwxHjbxhBfY+3XJNqvXYGx0xkBrWEtJhJEzDOMs
          UWY24u7dixPhc4uECJSAsBMC5E79KujmOX41A=
          -----END OPENSSH PRIVATE KEY-----
        passphrase: amin
        source: "."
        target: "/var/project/"
        debug: true
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 148.230.116.195
        username: root
        key: |
          -----BEGIN OPENSSH PRIVATE KEY-----
          b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCE5Y18X2
          UNRZ+tA/PCfyE/AAAAGAAAAAEAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIBslgWt/ggXzi5H6
          wE0bVWW7IljYyj7g2PHokA0sMPneAAAAoOMthg25i6itHp2e/zIvbGr393bkVVZwxIFPlg
          Utj3UIoyGBS5MCa4phC6edXMfKZfolhWRaqu04uH9fFDz00c9VKo4DintAg+v6TonaotQD
          Tckg/WhpsR2wfx/NzWFLozJCK63UhmXwwxHjbxhBfY+3XJNqvXYGx0xkBrWEtJhJEzDOMs
          UWY24u7dixPhc4uECJSAsBMC5E79KujmOX41A=
          -----END OPENSSH PRIVATE KEY-----
        passphrase: amin
        debug: true
        script: |
          # Navigate to project directory
          cd /var/project
          
          # Stop existing container
          docker stop customer-backend || true
          docker rm customer-backend || true
          
          # Build Docker image on server
          docker build -t customer-backend:latest .
          
          # Run new container in production mode
          docker run -d \
            --name customer-backend \
            --restart unless-stopped \
            -p 3000:3000 \
            -e NODE_ENV=production \
            customer-backend:latest
          
          # Show running containers
          docker ps
          
          # Show container logs
          docker logs customer-backend
          
          # Check if container is running
          if ! docker ps | grep -q customer-backend; then
            echo "Container failed to start. Checking logs..."
            docker logs customer-backend
            exit 1
          fi
          
          # Test the health endpoint
          sleep 10
          curl -f http://localhost:3000/api/health || echo "Health check failed"